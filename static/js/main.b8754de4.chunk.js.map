{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","handleCheck","handleDelete","useState","completed","checked","setChecked","useEffect","document","getElementById","id","classList","add","remove","className","type","onChange","title","size","color","onClick","onMouseDown","e","target","TodoList","todoList","map","NavBar","Navbar","Nav","Link","as","NavLink","to","App","task","setTask","setTodoList","setCompleted","unCompleted","setUnCompleted","checkTodo","filter","index","Number","list","parentNode","console","log","newList","fetch","then","response","json","length","name","value","input","querySelector","preventDefault","setTimeout","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b8754de4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nconst Todo = ({ todo, handleCheck, handleDelete }) => {\r\n  const [checked, setChecked] = useState(todo.completed);\r\n  useEffect(() => {\r\n    setChecked(todo.completed);\r\n    checked\r\n      ? document.getElementById(todo.id).classList.add(\"checked\")\r\n      : document.getElementById(todo.id).classList.remove(\"checked\");\r\n  });\r\n  const animation = (e)=>{\r\n    e.target.classList.add('delete-icon')\r\n  }\r\n  return (\r\n    <div className=\"todo-row\" id={todo.id}>\r\n      <div className=\"sub\">\r\n        <input\r\n          className=\"todo\"\r\n          type=\"checkbox\"\r\n          id={todo.id}\r\n          checked={checked}\r\n          onChange={handleCheck}\r\n        />\r\n        <span className=\"todo\">{todo.id}</span>\r\n        <p className=\"todo\">{todo.title}</p>\r\n      </div>\r\n      {checked && (\r\n          <FaTrashAlt \r\n              size={18}\r\n              color='red' \r\n              id={todo.id} \r\n              onClick={handleDelete}\r\n              onMouseDown={animation}\r\n              /> \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nconst TodoList = ({ todoList, handleCheck, handleDelete }) => {\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <div>\r\n        {todoList &&\r\n          todoList.map((todo) => {\r\n            return (\r\n              <Todo\r\n                key={todo.id}\r\n                todo={todo}\r\n                handleCheck={handleCheck}\r\n                handleDelete={handleDelete}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <>\r\n      <Navbar className=\"navbar navbar-expand-md\">\r\n        <Nav.Link as={NavLink} to=\"/list\" className=\"link\">\r\n          Todo List\r\n        </Nav.Link>\r\n        <Nav.Link as={NavLink} to=\"/unchecked\" className=\"link\">\r\n          Active\r\n        </Nav.Link>\r\n        <Nav.Link as={NavLink} to=\"/checked\" className=\"link\">\r\n          Completed\r\n        </Nav.Link>\r\n      </Navbar>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport TodoList from \"./components/TodoList\";\nimport NavBar from \"./components/NavBar\";\nimport \"./App.css\";\n\nfunction App() {\n  const [task, setTask] = useState()\n  const [todoList, setTodoList] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  const [unCompleted, setUnCompleted] = useState([]);\n\n  const checkTodo = () => {\n    let completed = todoList.filter((todo) => todo.completed === true);\n    let unCompleted = todoList.filter((todo) => todo.completed === false);\n    setCompleted(completed);\n    setUnCompleted(unCompleted);\n  };\n  const handleCheck = (e) => {\n    const index = Number(e.target.id);\n    let list = [...todoList];\n    list = list.map((e) => {\n      if (index === e.id) {\n        e.completed ? (e.completed = false) : (e.completed = true);\n      }\n      return e;\n    });\n    setTodoList(list);\n    checkTodo();\n  };\n  const handleDelete = (e) => {\n    let target = e.target.parentNode\n    const index = Number(target.id);\n    console.log(index);\n    let list = [...todoList];\n    let newList = list.filter((e) => e.id !== index);\n    setTodoList(newList);\n    console.log(todoList);\n  };\n  const handleChange = (e)=> {\n    let length = todoList.length + 1\n    const task = {\n      [e.target.name]: e.target.value,\n      completed: false,\n      id: length\n    }\n    setTask(task)\n  }\n const handleAdd = (e)=>{\n  let input = document.querySelector('.add-task')\n   if (input.value === '') {\n     e.preventDefault()\n     console.log('ingrese tarea')\n   }else{\n   e.preventDefault()\n  setTodoList([...todoList, task])\n  input.value = ''\n  setTask()\n  }}\n  const btnAction=()=>{\n    document.querySelector('.btn-add').classList.add('btn-add-selected')\n    setTimeout(() => {\n      document.querySelector('.btn-add').classList.remove('btn-add-selected')\n    }, 100);\n  }\n  const handleClean =()=>{\n    setTodoList(todoList.filter((todo)=>todo.completed === false))\n  }\n   useEffect(() => {\n     fetch(\"https://jsonplaceholder.typicode.com/todos\")\n        .then((response) => response.json())\n        .then((json) =>setTodoList(json.filter(e=> e.id < 21)))\n  }, [setTodoList]); \n  useEffect(() => {\n    todoList.length !== 0 ? checkTodo() : checkTodo();\n  }, [todoList.length]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">ToDo-app</h1>\n      {(todoList.length !== []) && \n      <Router>\n        <NavBar />\n        <div>\n          <form>\n            <input\n              className='add-task' \n              type='text' \n              name='title' \n              onChange={handleChange}>\n            </input>\n            <button\n              onClick={handleAdd} \n              onMouseDown={btnAction}\n              className='btn-add'\n            >add</button>\n          </form>\n          <button className='btn-clean' onClick= {handleClean}>clean fullfileds</button>\n        </div>\n        <Routes>\n          <Route\n            path=\"/list\"\n            element={\n              <TodoList\n                todoList={todoList}\n                handleCheck={handleCheck}\n                handleDelete={handleDelete}\n              />\n            }\n          ></Route>\n        </Routes>\n        <Routes>\n          <Route\n            path=\"/unchecked\"\n            element={\n              <TodoList todoList={unCompleted} handleCheck={handleCheck} />\n            }\n          />\n        </Routes>\n        <Routes>\n          <Route\n            path=\"/checked\"\n            element={\n              <TodoList\n                todoList={completed}\n                handleCheck={handleCheck}\n                handleDelete={handleDelete}\n              />\n            }\n          />\n        </Routes>\n      </Router>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}